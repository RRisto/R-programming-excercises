summary(junn$Ozone)
mean(junn$Ozone, na.rm=T)
junn2=subset(junn, Ozone>31 & Temp>90)
mean(junn2$Solar.R)
mean(junn$Temp[junn$Month==6])
max(junn$Ozone[junn$Month==6])
max(junn$Ozone[junn$Month==5])
junn$Ozone[junn$Month==5]
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
class(cbind(x, y))
str(cbind(x, y))
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
x <- 1:4
y <- 2:3
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
Assignment: Caching the Inverse of a Matrix
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
setwd("C://Users//risto//Documents//Minu asjad//Statistika, mudelid, excel//
R//Coursera//courses-master//02_RProgramming//homework")
setwd("C://Users//risto//Documents//Minu asjad//Statistika, mudelid, excel//R//Coursera//courses-master//02_RProgramming//homework")
submit()
getwd()
setwd("C://Users//risto//Documents//Minu asjad//Statistika, mudelid, excel//R//Coursera//courses-master//02_RProgramming//homework")
submit()
submit()
submit()
submit()
submit()
source('~/Minu asjad/Statistika, mudelid, excel/R/Coursera/courses-master/02_RProgramming/homework/complete.R')
submit()
submit()
submit()
submit()
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
setwd("C://Users//risto//Documents//Minu asjad//Statistika, mudelid, excel//R//Coursera//courses-master//02_RProgramming//homework/specdata")
list.files(getwd())
directory=getwd()
files=list.files(directory)
data=read.csv(files)
getwd()
data=lapply(files, read.delim)
head(data)
class(data)
data=as.data.frame(lapply(files, read.delim))
data=lapply(files, read.delim)
data2=data.frame(data)
data=read.delim(files)
data=lapply(files, read.csv)
class(data)
head(class)
data
do.call(rbind, data)
data=lapply(files, read.csv)
data=do.call(rbind, tables)
data=do.call(rbind, data)
head(data)
class(data'')
class(data)
str(data)
suymmary(data)
summary(data)
View(data)
View(dat)
View(data)
tail(data)
data2=na.omit(data)
View(data2)
summary(data2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
data2=na.omit(data)
data.sub=subset(data2, ID==id)
if (pollutant=="sulfate") {
keskmine=mean(data.sub$sulfate)
}
if (pollutant=="nitrate") {
keskmine=mean(data.sub$nitrate)
}
keskmine
}
pollutantmean("specdata", "nitrate")
data.sub=subset(data2, ID==id)
id=1:50
data.sub=subset(data2, ID==id)
data.sub=subset(data2, ID=id)
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
data2=na.omit(data)
data.sub=subset(data2, ID=id)
if (pollutant=="sulfate") {
keskmine=mean(data.sub$sulfate)
}
if (pollutant=="nitrate") {
keskmine=mean(data.sub$nitrate)
}
keskmine
}
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
#data2=na.omit(data)
data.sub=subset(data, ID=id)
if (pollutant=="sulfate") {
keskmine=mean(data.sub$sulfate, na.rm=T)
}
if (pollutant=="nitrate") {
keskmine=mean(data.sub$nitrate, na.rm=T)
}
keskmine
}
pollutantmean("specdata", "sulfate", 1:10)
data.sub
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
#data2=na.omit(data)
data.sub=subset(data, ID=id)
if (pollutant=="sulfate") {
keskmine=mean(data.sub$sulfate)
}
if (pollutant=="nitrate") {
keskmine=mean(data.sub$nitrate)
}
keskmine
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
#data2=na.omit(data)
data.sub=subset(data, ID=id)
if (pollutant=="sulfate") {
keskmine=mean(data.sub$sulfate, na.rm=T)
}
if (pollutant=="nitrate") {
keskmine=mean(data.sub$nitrate, na.rm=T)
}
keskmine
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
setwd("C://Users//risto//Documents//Minu asjad//Statistika, mudelid, excel//R//Coursera//courses-master//02_RProgramming//homework")
#getwd()
#list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
#
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
#data2=na.omit(data)
data.sub=subset(data, ID=id)
if (pollutant=="sulfate") {
keskmine=mean(data.sub$sulfate, na.rm=T)
}
if (pollutant=="nitrate") {
keskmine=mean(data.sub$nitrate, na.rm=T)
}
keskmine
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
#data2=na.omit(data)
data.sub=subset(data, ID=id)
if (pollutant=="sulfate") {
keskmine=mean(data.sub$sulfate, na.rm=T)
}
if (pollutant=="nitrate") {
keskmine=mean(data.sub$nitrate, na.rm=T)
}
keskmine
}
setwd("C://Users//risto//Documents//Minu asjad//Statistika, mudelid, excel//R//Coursera//courses-master//02_RProgramming//homework/specdata")
pollutantmean("specdata", "sulfate", 1:10)
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
#data2=na.omit(data)
data.sub=subset(data, ID=id)
id=23
data.sub=subset(data, ID=id)
View(data.sub)
data.sub=subset(data, ID==id)
id=1:10
data.sub=subset(data, ID==id)
data.sub=subset(data, ID%in%id)
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory=getwd()
files=list.files(directory)
#data=read.csv(files)
data=lapply(files, read.csv)
data=do.call(rbind, data)
#ainult complete cases
#data2=na.omit(data)
data.sub=subset(data, ID%in%id)
if (pollutant=="sulfate") {
keskmine=mean(data.sub$sulfate, na.rm=T)
}
if (pollutant=="nitrate") {
keskmine=mean(data.sub$nitrate, na.rm=T)
}
keskmine
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
id=1:4
id
grepl(id, files)
grepl(id, files, fixed=T)
directory=getwd()
files=list.files(directory)
complete.cases(files[1])
complete.cases(read,csv(files[1]))
complete.cases(read.csv(files[1]))
nrow(complete.cases(read.csv(files[1])))
count(complete.cases(read.csv(files[1])))
nrow[(complete.cases(read.csv(files[1])))=="TRUE"]
(complete.cases(read.csv(files[1])))=="TRUE"
complete.cases(read.csv(files[1]))=="TRUE"
sum(complete.cases(read.csv(files[1]))=="TRUE")
sum(complete.cases(read.csv(files[3]))=="TRUE")
complete <- function(directory, id = 1:332) {
directory=getwd()
files=list.files(directory)
pikkus=length(id)
for (i in id) {
nobs[i]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
}
id=2:3
directory=getwd()
files=list.files(directory)
pikkus=length(id)
for (i in id) {
nobs[i]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
for (i in id) {
nobs=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
for (i in id) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
j=1
for (i in id) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
j=length(id)
for (i in id) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
id=2:3
j=length(id)
for (i in id) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
kokku=length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
id=2
kokku=length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
length(id)
kokku=length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
id=2:3
kokku=length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
id=30:25
kokku=length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
kokku=length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
id=30:25
length(id)
kokku=length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
kokku=1:length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
id=30:25
id
kokku=1:length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
for (i in id) {
nobs[i]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
for (i in id) {
nobs[i]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
id
kokku=1:length(id)
for(j in kokku) {
for (i in id) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
for(j in kokku) {
for (i in id) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
kokku=1:length(id)
kokku
id=30:25
kokku
id
for (i in id) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
nobs
id=30:25
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
kokku=1:length(id)
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
directory=getwd()
files=list.files(directory)
kokku=1:length(id)
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
getwd
getwd()
directory=getwd()
files=list.files(directory)
kokku=1:length(id)
for (i in id) {
for(j in kokku) {
nobs[j]=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
for (i in id) {
for(j in kokku) {
nobs=sum(complete.cases(read.csv(files[i]))=="TRUE")
}
}
nobs
